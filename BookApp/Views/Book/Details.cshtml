@using Microsoft.AspNetCore.Identity
@model Shared.DTOs.BookDetailsDTO

@{
    ViewData["Title"] = "Book Details";
}
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@functions {
    public async Task<bool> IsUserAdmin()
    {
        try
        {
            var user = await UserManager.GetUserAsync(User);
            return await UserManager.IsInRoleAsync(user!, UserRole.Admin);
        }
        catch (Exception)
        {
            return false;
        }
    }
}

<div class="container mt-4">
    <div class="row">
        <!-- Book Cover Image on the Left -->
        <div class="col-md-4 text-center">
            @if (Model.CoverImage != null)
            {
                <img src="@Url.Content($"~/images/book/{Model.CoverImage}")" alt="Cover Image" class="img-fluid rounded" style="max-width: 100%; height: auto;" />
            }
            else
            {
                <div class="rounded bg-secondary text-white d-flex align-items-center justify-content-center" style="width: 100%; height: auto;">
                    No Cover Image
                </div>
            }
        </div>

        <!-- Book Details on the Right -->
        <div class="col-md-8 text-right" style="color: #c3ae85; font-size: 1.2rem;">
            <h1 class="font-weight-bold" style="color: #c3ae85;">@Model.Title</h1>
            <h4 style="color: #c3ae85;">@Model.AuthorName</h4>
            <hr style="border-color: #c3ae85;" />

            <!-- Category, Publication Date, Availability -->
            <div class="mb-2">
                @Model.CategoryName
            </div>
            <div class="mb-2">
                @Model.PublicationDate.ToShortDateString()
            </div>
            <div class="mb-2">
                @((Model.IsAvailable ? "Available" : "Not Available"))
            </div>
            <hr style="border-color: #c3ae85;" />

            <!-- Description -->
            <div class="mb-2">
                @Model.Description
            </div>

            <!-- Price in a Rounded Colored Label -->
            <div class="mt-3">
                <span class="badge badge-pill badge-success" style="font-size: 1.2rem; background-color: #c3ae85; color: white;">@Model.Price</span>
            </div>

            @if (!await IsUserAdmin())
            {
                <div class="mt-3">
                    <form id="addToCartForm">
                        <input type="hidden" name="BookId" value="@Model.Id" />
                        <!-- Quantity Selector -->
                        <div class="form-group">
                            <label for="Quantity" style="color: #c3ae85;">Quantity</label>
                            <input type="number" name="Quantity" id="Quantity" class="form-control" value="1" min="1" />
                        </div>
                        <button type="button" id="addToCartButton" class="btn btn-success" style="background-color: #c3ae85; border-color: #c3ae85; font-size: 1.2rem;">
                            Add to Cart
                        </button>
                    </form>
                </div>
            }
        </div>
    </div>
</div>

@if (await IsUserAdmin())
{
    <div class="mt-4 text-right">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-secondary" style="color: #c3ae85; border-color: #c3ae85;">Edit</a> |
        <a asp-action="Index" class="btn btn-outline-secondary" style="color: #c3ae85; border-color: #c3ae85;">Back to List</a>
    </div>
}

@section Scripts {
    <script>
        document.getElementById("addToCartButton").addEventListener("click", function () {
            var form = document.getElementById("addToCartForm");
            var formData = new FormData(form);

            fetch('@Url.Action("AddToCart", "UserCart")', {
                method: "POST",
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        alert("Item added to cart successfully!");
                        // Optionally update the cart count or other UI elements here
                    } else {
                        alert("Failed to add item to cart. Please try again.");
                    }
                })
                .catch(error => {
                    console.error("Error adding item to cart:", error);
                    alert("An error occurred. Please try again.");
                });
        });
    </script>
}
