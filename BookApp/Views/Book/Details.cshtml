@using Microsoft.AspNetCore.Identity
@model Shared.DTOs.BookDetailsDTO

@{
    ViewData["Title"] = "Book Details";
}
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@functions {
    public async Task<bool> IsUserAdmin()
    {
        try
        {
            var user = await UserManager.GetUserAsync(User);
            return await UserManager.IsInRoleAsync(user!, UserRole.Admin);
        }
        catch (Exception)
        {
            return false;
        }
    }
}

<div class="container mt-4">
    <div class="row">
        <!-- Book Cover Image on the Left -->
        <div class="col-md-4 text-center">
            @if (Model.CoverImage != null)
            {
                <img src="@Url.Content($"~/images/book/{Model.CoverImage}")" alt="Cover Image" class="img-fluid rounded" style="max-width: 100%; height: auto;" />
            }
            else
            {
                <div class="rounded bg-secondary text-white d-flex align-items-center justify-content-center" style="width: 100%; height: auto;">
                    No Cover Image
                </div>
            }
        </div>

        <!-- Book Details on the Right -->
        <div class="col-md-8" style="color: #c3ae85; font-size: 1.2rem;">
            <h1 class="font-weight-bold" style="color: #c3ae85;">@Model.Title</h1>
            <h4 style="color: #c3ae85;">@Model.AuthorName</h4>
            <hr style="border-color: #c3ae85;" />

            <!-- Category, Publication Date, Availability -->
            <div class="mb-2">
                <strong>Category:</strong> @Model.CategoryName
            </div>
            <div class="mb-2">
                <strong>Publication Date:</strong> @Model.PublicationDate.ToShortDateString()
            </div>
            <div class="mb-2">
                <strong>Availability:</strong> @((Model.IsAvailable ? $"Available {Model.Quantity} Books" : "Not Available"))
            </div>
            <hr style="border-color: #c3ae85;" />

            <!-- Description -->
            <div class="mb-2">
                <strong>Description:</strong> @Model.Description
            </div>

            @if (!await IsUserAdmin())
            {
                <div class="mt-3 d-flex justify-content-between align-items-center">
                    <!-- Quantity -->
                    <div class="form-group mb-0">
                        <label for="Quantity"><strong>Quantity:</strong></label>
                        <div class="input-group" style="max-width: 160px;">
                            <div class="input-group-prepend">
                                <button type="button" class="btn" style="background-color: #c3ae85;" onclick="decrementQuantity()">-</button>
                            </div>
                            <input type="number" id="Quantity" name="Quantity" value="1" class="form-control text-center" min="1" style="max-width: 60px;" />
                            <div class="input-group-append">
                                <button type="button" class="btn" style="background-color: #c3ae85;" onclick="incrementQuantity()">+</button>
                            </div>
                        </div>
                    </div>

                    <!-- Price and Add to Cart Button -->
                    <div>
                        <span class="badge badge-pill badge-success" style="font-size: 1.2rem; background-color: #c3ae85; color: white;">@Model.Price .LE</span>

                        <form asp-action="AddToCart" asp-controller="UserCart" method="post" class="d-inline" onsubmit="return validateQuantity()">
                            <input type="hidden" name="BookId" value="@Model.Id" />
                            <input type="hidden" id="AvailableQuantity" value="@Model.Quantity" />
                            <button type="submit" class="btn btn-success ml-2" style="background-color: #c3ae85; border-color: #c3ae85; font-size: 1.2rem;">
                                Add to Cart
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@if (await IsUserAdmin())
{
    <div class="mt-4 text-right">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-secondary" style="color: #c3ae85; border-color: #c3ae85;">Edit</a> |
        <a asp-action="Index" class="btn btn-outline-secondary" style="color: #c3ae85; border-color: #c3ae85;">Back to List</a>
    </div>
}

<script type="text/javascript">
    function validateQuantity() {
        var availableQuantity = parseInt(document.getElementById("AvailableQuantity").value);
        var enteredQuantity = parseInt(document.getElementById("Quantity").value);

        if (enteredQuantity > availableQuantity) {
            alert("Quantity entered exceeds available stock.");
            return false;
        }
        return true;
    }

    function incrementQuantity() {
        var quantityInput = document.getElementById("Quantity");
        var availableQuantity = parseInt(document.getElementById("AvailableQuantity").value);
        var currentValue = parseInt(quantityInput.value);

        if (currentValue < availableQuantity) {
            quantityInput.value = currentValue + 1;
        }
    }

    function decrementQuantity() {
        var quantityInput = document.getElementById("Quantity");
        var currentValue = parseInt(quantityInput.value);

        if (currentValue > 1) {
            quantityInput.value = currentValue - 1;
        }
    }
</script>
