@model IEnumerable<Shared.DTOs.AppUserDTO>

<h2>Users</h2>

<div class="form-group position-relative">
    <input type="text" id="searchEmail" class="form-control" placeholder="Search by Email" style="padding-left: 2.5rem;" />
    <span class="search-icon position-absolute" style="left: 10px; top: 10px;">
        <i class="fas fa-search"></i> <!-- Using FontAwesome for the search icon -->
    </span>
</div>

<div class="table-responsive mt-4">
    <table class="table table-striped table-hover align-middle">
        <thead class="text-white" style="background-color:orange">
            <tr>
                <th>
                    First Name
                    <a href="#" class="sort-column text-black" data-column="FirstName" data-order="asc">
                        <i class="fas fa-sort"></i>
                    </a>
                </th>
                <th>Last Name</th>
                <th>Address</th>
                <th>Email</th>
                <th>
                    Created On
                    <a href="#" class="sort-column text-black" data-column="CreatedOn" data-order="asc">
                        <i class="fas fa-sort"></i>
                    </a>
                </th>
                <th>Accepted</th>
                <th>Admin Accepted</th>
                <th>Is Deleted</th>
                <th>Admin Deleted</th>
            </tr>
        </thead>
        <tbody id="userTableBody">
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Address</td>
                    <td>@user.Email</td>
                    <td>@user.CreatedOn.ToString("MMMM dd, yyyy")</td>
                    <td class="text-center">
                        @(user.AdminAccepted ? "✓" : "✘")
                    </td>
                    <td class="text-center">
                        <form asp-action="ToggleAdminAccepted" asp-route-id="@user.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-outline-primary btn-sm">@((user.AdminAccepted) ? "Reject" : "Accept")</button>
                        </form>
                    </td>
                    <td class="text-center">
                        @(user.IsDeleted ? "✓" : "✘")
                    </td>
                    <td class="text-center">
                        <form asp-action="ToggleDelete" asp-route-id="@user.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-outline-danger btn-sm">@((user.IsDeleted) ? "Restore" : "Delete")</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script> <!-- FontAwesome CDN -->

    <script>
        // Trigger sorting on column click
        document.querySelectorAll('.sort-column').forEach(function (element) {
            element.addEventListener('click', function (e) {
                e.preventDefault();
                var column = this.getAttribute('data-column');
                var order = this.getAttribute('data-order');

                // Toggle sort order
                var newOrder = order === 'asc' ? 'desc' : 'asc';

                // Perform AJAX request for sorting
                var url = '@Url.Action("Index")' + '?sortColumn=' + encodeURIComponent(column) + '&sortOrder=' + encodeURIComponent(newOrder);
                fetch(url)
                    .then(response => response.text())
                    .then(html => {
                        // Extract the new table rows and replace the current table body
                        var parser = new DOMParser();
                        var newDoc = parser.parseFromString(html, 'text/html');
                        var newTableBody = newDoc.getElementById('userTableBody');
                        document.getElementById('userTableBody').innerHTML = newTableBody.innerHTML;

                        // Update the sort order for the next click
                        this.setAttribute('data-order', newOrder);

                        // Update the icon to reflect the sort order
                        var icon = this.querySelector('i');
                        icon.classList.remove('fa-sort', 'fa-sort-asc', 'fa-sort-desc');
                        icon.classList.add(newOrder === 'asc' ? 'fa-sort-asc' : 'fa-sort-desc');
                    });
            });
        });

        // Live search functionality (same as before)
        document.getElementById('searchEmail').addEventListener('input', function () {
            var searchEmail = this.value.trim();

            if (searchEmail.length > 0) {
                var url = '@Url.Action("Index")' + '?searchEmail=' + encodeURIComponent(searchEmail);
                fetch(url)
                    .then(response => response.text())
                    .then(html => {
                        var parser = new DOMParser();
                        var newDoc = parser.parseFromString(html, 'text/html');
                        var newTableBody = newDoc.getElementById('userTableBody');
                        document.getElementById('userTableBody').innerHTML = newTableBody.innerHTML;
                    });
            } else {
                var url = '@Url.Action("Index")';
                fetch(url)
                    .then(response => response.text())
                    .then(html => {
                        var parser = new DOMParser();
                        var newDoc = parser.parseFromString(html, 'text/html');
                        var newTableBody = newDoc.getElementById('userTableBody');
                        document.getElementById('userTableBody').innerHTML = newTableBody.innerHTML;
                    });
            }
        });
    </script>
}
